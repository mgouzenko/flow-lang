OBJS = parser.cmo scanner.cmo flowc.cmo prettyprinter.cmo

# Choose one
YACC = ocamlyacc
# YACC = menhir --explain

TARFILES = Makefile scanner.mll parser.mly flowc.ml

flowc : $(OBJS)
	ocamlc -o flowc $(OBJS)

.PHONY : test
test : flowc testall.sh
	./testall.sh

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	$(YACC) parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

flowc.tar.gz : $(TARFILES)
	cd .. && tar czf flowc/flowc.tar.gz $(TARFILES:%=flowc/%)

.PHONY : clean
clean :
	rm -f flowc parser.ml parser.mli scanner.ml testall.log \
	*.cmo *.cmi *.out *.diff

ast.cmo :
ast.cmx :
flowc.cmo : scanner.cmo prettyprinter.cmo parser.cmi
flowc.cmx : scanner.cmx prettyprinter.cmx parser.cmx
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
prettyprinter.cmo : ast.cmo
prettyprinter.cmx : ast.cmx
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
parser.cmi : ast.cmo
# Generated by ocamldep *.ml *.mli
# ast.cmo:
# ast.cmx:
# flowc.cmo: scanner.cmo parser.cmi ast.cmo
# flowc.cmx: scanner.cmx parser.cmx ast.cmx
# parser.cmo: ast.cmo parser.cmi
# parser.cmx: ast.cmx parser.cmi
# scanner.cmo: parser.cmi
# scanner.cmx: parser.cmx
# parser.cmi: ast.cmo
